apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-writer
  labels:
    {{- include "deploy.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - watch
  - list
  - delete
- apiGroups: ["", "batch", "apps"]
  #
  # at the HTTP level, the name of the resource for accessing Secret
  # objects is "secrets"
  resources: ["pods", "jobs", "pods/log", "persistentvolumes", "persistentvolumeclaims", "persistentvolumeclaims/status", "statefulsets", "configmaps", "services"]
  verbs: ["get", "watch", "list", "update", "delete", "create"]

- apiGroups: ["ml.kalkyai.com"]
  resources: ["models"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---


apiVersion: rbac.authorization.k8s.io/v1
# This cluster role binding allows anyone in the "manager" group to read secrets in any namespace.
kind: ClusterRoleBinding
metadata:
  name: write-secrets-global
  labels:
    {{- include "deploy.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
subjects:
- kind: ServiceAccount
  name: {{ include "deploy.serviceAccountName" . }} # Name is case sensitive
  namespace: backend
roleRef:
  kind: ClusterRole
  name: pod-writer
  apiGroup: rbac.authorization.k8s.io